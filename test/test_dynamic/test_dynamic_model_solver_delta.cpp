#include "test_dynamic_model_solver_delta.h"
#include <iostream>
#include <array>
#include <aris/dynamic/dynamic.hpp>

#include<type_traits>

using namespace aris::dynamic;

void test_model_solver_delta()
{

	////////////////////////////////////////////////测试建模/////////////////////////////////////////////////
	aris::dynamic::DeltaParam param;
	param.a = 0.5;
	param.b = 0.2;
	param.c = 0.1;
	param.d = 0.7;
	param.e = 0.1;


	param.tool0_pe[2] = 0.078;

	param.iv_vec =
	{
		{ 0.00000000000000,   0.00000000000000,   0.00000000000000,   0.00000000000000,   0.00000000000000,   0.00000000000000,   0.59026333537827,   0.00000000000000,   0.00000000000000,   0.00000000000000 },
		{ 0.00000000000000, -0.02551872200978,   0.00000000000000,   3.05660683326413,   2.85905166943306,   0.00000000000000,   0.00000000000000, -0.00855352993039, -0.09946674483372, -0.00712210734359 },
		{ 0.00000000000000,   0.00000000000000,   0.00000000000000,   0.02733022277747,   0.00000000000000,   0.37382629693302,   0.00000000000000,   0.00312006493276, -0.00578410451516,   0.00570606128540 },
		{ 0.00000000000000,   1.06223330086669,   0.00000000000000,   0.00311748242960,   0.00000000000000,   0.24420385558544,   0.24970286555981,   0.00305759215246, -0.66644096559686,   0.00228253380852 },
		{ 0.00000000000000,   0.05362286897910,   0.00528925153464, -0.00842588023014,   0.00128498153337, -0.00389810210572,   0.00000000000000, -0.00223677867576, -0.03365036368035, -0.00415647085627 },
		{ 0.00000000000000,   0.00000000000000,   0.00066049870832,   0.00012563800445, -0.00085124094833,   0.04209529937135,   0.04102481443654, -0.00067596644891,   0.00017482449876, -0.00041025776053 },
	};

	param.mot_frc_vec =
	{
		{9.34994758321915, 7.80825641041495, 0.00000000000000},
		{11.64080253106441, 13.26518528472506, 3.55567932576820},
		{4.77014054273075, 7.85644357492508, 0.34445460269183},
		{3.63141668516122, 3.35461524886318, 0.14824771620542},
		{2.58310846982020, 1.41963212641879, 0.04855267273770},
		{1.78373986219597, 0.31920640440152, 0.03381545544099},
	};
	auto m1 = aris::dynamic::createModelDelta(param);

	auto &adams = m1->simulatorPool().add<aris::dynamic::AdamsSimulator>();
	m1->init();

	adams.saveAdams("C:\\Users\\py033\\Desktop\\MODEL_1.cmd");



	//dynamic_cast<aris::dynamic::GeneralMotion&>(m1->generalMotionPool().at(0)).setMpe(std::array<double, 6>{0.38453, 0, 0.6294, 0.0001, 0 + aris::PI/2, 0}.data(), "321");
	//m1->solverPool().at(0).kinPos();

	std::cout << "-----------------test model solver puma finished------------" << std::endl << std::endl;
}

